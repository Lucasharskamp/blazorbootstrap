<Button Color="BsColor.Primary" @onclick="async () => await ShowSpinnerAsync(BsColor.Primary)">Primary Spinner</Button>
<Button Color="BsColor.Secondary" @onclick="async () => await ShowSpinnerAsync(BsColor.Secondary)">Secondary Spinner</Button>
<Button Color="BsColor.Success" @onclick="async () => await ShowSpinnerAsync(BsColor.Success)">Success Spinner</Button>
<Button Color="BsColor.Danger" @onclick="async () => await ShowSpinnerAsync(BsColor.Danger)">Danger Spinner</Button>
<Button Color="BsColor.Warning" @onclick="async () => await ShowSpinnerAsync(BsColor.Warning)">Warning Spinner</Button>
<Button Color="BsColor.Info" @onclick="async () => await ShowSpinnerAsync(BsColor.Info)">Info Spinner</Button>
<Button Color="BsColor.Light" @onclick="async () => await ShowSpinnerAsync(BsColor.Light)">Light Spinner</Button>
<Button Color="BsColor.Dark" @onclick="async () => await ShowSpinnerAsync(BsColor.Dark)">Dark Spinner</Button>

@code {
    [Inject] protected PreloadService PreloadService { get; set; } = default!;

    private async Task ShowSpinnerAsync(BsColor spinnerColor)
    {
        PreloadService.Show(spinnerColor);

        await Task.Delay(3000); // call the service/api

        PreloadService.Hide();
    }
}
